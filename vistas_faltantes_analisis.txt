ANÁLISIS DE VISTAS FALTANTES - PROYECTO VITAL RED
================================================

ESTADO ACTUAL DEL PROYECTO
==========================

VISTAS EXISTENTES:
1. ✅ Login/Registro (Auth completo)
2. ✅ Dashboard Admin - Muestra todos los registros médicos
3. ✅ Panel de Supervisión Admin - Métricas y monitoreo básico
4. ✅ Gestión de Usuarios Admin - CRUD de usuarios
5. ✅ Ingresar Registro Médico - Formulario completo en 4 pasos con IA
6. ✅ Consulta Pacientes Médico - Lista y búsqueda de registros propios

FUNCIONALIDADES EXISTENTES:
- Sistema de autenticación completo
- Roles: Administrador y Médico
- Formulario de registro médico con 4 pasos
- Integración con IA para extracción de datos
- Subida y descarga de historias clínicas
- Búsqueda y filtrado de registros
- Paginación
- Dashboard básico de administrador

VISTAS CRÍTICAS FALTANTES SEGÚN ESPECIFICACIONES
===============================================

1. DASHBOARD EJECUTIVO PARA REFERENCIAS Y CONTRARREFERENCIAS
-----------------------------------------------------------
**Ubicación sugerida:** `/admin/dashboard-referencias`
**Usuarios:** Jefe de urgencias, Centro de referencia
**Funcionalidades requeridas:**
- Vista en tiempo real de solicitudes pendientes
- Clasificación por prioridad (ROJO/VERDE)
- Métricas de especialidades más solicitadas
- Alertas de casos críticos sin atender
- Gráficos de tendencias y patrones
- Filtros por especialidad, IPS, tiempo
- Botones de acción: Aceptar/Rechazar solicitudes

**Componentes necesarios:**
- Tabla de solicitudes con prioridad visual
- Cards de métricas (total día, tiempo promedio, etc.)
- Gráfico de barras por especialidad
- Panel de alertas críticas
- Filtros avanzados
- Modal de detalle de solicitud

2. VISTA DE GESTIÓN DE SOLICITUDES DE REFERENCIA
-----------------------------------------------
**Ubicación sugerida:** `/medico/gestionar-referencias`
**Usuarios:** Personal médico interno
**Funcionalidades requeridas:**
- Lista de solicitudes pendientes de decisión
- Vista detallada de cada solicitud con historia clínica
- Botones para Aceptar/Rechazar con justificación
- Asignación de especialista
- Seguimiento de estado de pacientes aceptados
- Marcado de pacientes que ingresaron vs no ingresaron

**Componentes necesarios:**
- Tabla con filtros por estado y prioridad
- Modal de vista detallada de solicitud
- Formulario de decisión (aceptar/rechazar)
- Sistema de comentarios/observaciones
- Indicadores visuales de tiempo transcurrido

3. VISTA DE FORMULARIO PARA IPS EXTERNAS
---------------------------------------
**Ubicación sugerida:** `/ips/solicitar-referencia`
**Usuarios:** Personal de IPS remitentes
**Funcionalidades requeridas:**
- Formulario simplificado para solicitar referencias
- Solo campos esenciales (no todos los del registro completo)
- Subida de historia clínica obligatoria
- Vista de sus propias solicitudes enviadas
- Estado de sus solicitudes (pendiente/aceptado/rechazado)

**Componentes necesarios:**
- Formulario en 2-3 pasos (más simple que el actual)
- Drag & drop para historias clínicas
- Lista de solicitudes propias con estados
- Notificaciones de cambios de estado

4. DASHBOARD DE REPORTES Y ANALÍTICAS
------------------------------------
**Ubicación sugerida:** `/admin/reportes`
**Usuarios:** Administradores, Jefes de urgencias
**Funcionalidades requeridas:**
- Reportes de eficiencia del sistema
- Análisis de demanda por especialidad
- Métricas de tiempo de respuesta
- Reportes de IPS más activas
- Exportación de datos a Excel
- Gráficos de tendencias históricas

**Componentes necesarios:**
- Filtros de fecha y parámetros
- Múltiples tipos de gráficos
- Tablas de datos exportables
- Generador de reportes automáticos

5. VISTA DE CONFIGURACIÓN DEL ALGORITMO IA
-----------------------------------------
**Ubicación sugerida:** `/admin/configurar-ia`
**Usuarios:** Administradores técnicos
**Funcionalidades requeridas:**
- Ajuste de pesos de variables de priorización
- Configuración de criterios ROJO/VERDE
- Pruebas del algoritmo con casos históricos
- Métricas de precisión del algoritmo
- Reentrenamiento con nuevos datos

**Componentes necesarios:**
- Sliders para ajuste de pesos
- Formulario de criterios de priorización
- Panel de pruebas con casos de ejemplo
- Métricas de rendimiento del algoritmo

6. VISTA DE NOTIFICACIONES Y ALERTAS
-----------------------------------
**Ubicación sugerida:** `/notificaciones`
**Usuarios:** Todos los roles
**Funcionalidades requeridas:**
- Centro de notificaciones unificado
- Alertas de casos críticos
- Notificaciones de cambios de estado
- Configuración de preferencias de notificación
- Historial de notificaciones

**Componentes necesarios:**
- Lista de notificaciones con filtros
- Configuración de tipos de alerta
- Indicadores visuales y sonoros
- Integración con WebSocket para tiempo real

7. VISTA DE SEGUIMIENTO DE PACIENTES ACEPTADOS
---------------------------------------------
**Ubicación sugerida:** `/medico/seguimiento-pacientes`
**Usuarios:** Personal médico interno
**Funcionalidades requeridas:**
- Lista de pacientes aceptados
- Marcado de ingreso efectivo vs no ingreso
- Seguimiento de evolución
- Generación de contrarreferencias
- Estadísticas de no presentación

**Componentes necesarios:**
- Tabla con estados de seguimiento
- Formulario de actualización de estado
- Generador de contrarreferencias
- Métricas de seguimiento

8. VISTA MÓVIL/RESPONSIVE PARA HOSPITALES RURALES
------------------------------------------------
**Ubicación sugerida:** `/mobile` o versión responsive
**Usuarios:** Personal de hospitales rurales
**Funcionalidades requeridas:**
- Interfaz optimizada para móviles
- Formulario simplificado
- Integración con WhatsApp
- Funcionalidad offline básica
- Cámara para captura de documentos

**Componentes necesarios:**
- Diseño mobile-first
- Componentes táctiles grandes
- Captura de fotos
- Sincronización offline

PRIORIZACIÓN DE DESARROLLO
=========================

PRIORIDAD ALTA (Críticas para funcionamiento básico):
1. Dashboard Ejecutivo para Referencias (Vista principal del sistema)
2. Vista de Gestión de Solicitudes (Core del flujo de trabajo)
3. Vista de Formulario para IPS Externas (Entrada de datos externa)

PRIORIDAD MEDIA (Importantes para eficiencia):
4. Dashboard de Reportes y Analíticas
5. Vista de Seguimiento de Pacientes Aceptados
6. Vista de Notificaciones y Alertas

PRIORIDAD BAJA (Mejoras futuras):
7. Vista de Configuración del Algoritmo IA
8. Vista Móvil para Hospitales Rurales

ESPECIFICACIONES TÉCNICAS PARA IMPLEMENTACIÓN
============================================

ESTRUCTURA DE ARCHIVOS SUGERIDA:
```
resources/js/pages/
├── admin/
│   ├── dashboard-referencias.tsx (NUEVA)
│   ├── reportes.tsx (NUEVA)
│   ├── configurar-ia.tsx (NUEVA)
│   ├── supervision.tsx (EXISTENTE)
│   └── usuarios.tsx (EXISTENTE)
├── medico/
│   ├── gestionar-referencias.tsx (NUEVA)
│   ├── seguimiento-pacientes.tsx (NUEVA)
│   ├── ingresar-registro.tsx (EXISTENTE)
│   └── consulta-pacientes.tsx (EXISTENTE)
├── ips/
│   ├── solicitar-referencia.tsx (NUEVA)
│   └── mis-solicitudes.tsx (NUEVA)
└── shared/
    ├── notificaciones.tsx (NUEVA)
    └── mobile/ (NUEVA)
```

CONTROLADORES NECESARIOS:
```
app/Http/Controllers/
├── Admin/
│   ├── ReferenciasController.php (NUEVO)
│   ├── ReportesController.php (NUEVO)
│   └── IAConfigController.php (NUEVO)
├── Medico/
│   ├── ReferenciasController.php (NUEVO)
│   └── SeguimientoController.php (NUEVO)
├── IPS/
│   └── SolicitudController.php (NUEVO)
└── NotificacionesController.php (NUEVO)
```

MODELOS ADICIONALES NECESARIOS:
```
app/Models/
├── SolicitudReferencia.php (NUEVO - Tabla principal de solicitudes)
├── DecisionReferencia.php (NUEVO - Decisiones tomadas)
├── SeguimientoPaciente.php (NUEVO - Seguimiento post-aceptación)
├── Notificacion.php (NUEVO - Sistema de notificaciones)
├── ConfiguracionIA.php (NUEVO - Configuración del algoritmo)
└── IPS.php (NUEVO - Instituciones prestadoras)
```

MIGRACIONES REQUERIDAS:
1. solicitudes_referencia (tabla principal)
2. decisiones_referencia (aceptar/rechazar)
3. seguimiento_pacientes (post-aceptación)
4. notificaciones (sistema de alertas)
5. configuracion_ia (parámetros del algoritmo)
6. ips (instituciones prestadoras)

RUTAS ADICIONALES:
```php
// Admin - Referencias
Route::get('admin/dashboard-referencias', [ReferenciasController::class, 'dashboard']);
Route::post('admin/referencias/{id}/decidir', [ReferenciasController::class, 'decidir']);
Route::get('admin/reportes', [ReportesController::class, 'index']);

// Médico - Gestión
Route::get('medico/gestionar-referencias', [ReferenciasController::class, 'gestionar']);
Route::get('medico/seguimiento-pacientes', [SeguimientoController::class, 'index']);

// IPS - Solicitudes
Route::get('ips/solicitar-referencia', [SolicitudController::class, 'create']);
Route::post('ips/solicitar-referencia', [SolicitudController::class, 'store']);
```

COMPONENTES UI REUTILIZABLES NECESARIOS:
1. PriorityBadge (Rojo/Verde)
2. SolicitudCard (Tarjeta de solicitud)
3. DecisionModal (Modal para aceptar/rechazar)
4. TimeIndicator (Indicador de tiempo transcurrido)
5. SpecialtyFilter (Filtro por especialidad)
6. StatusTracker (Seguimiento de estados)
7. NotificationCenter (Centro de notificaciones)
8. ReportChart (Gráficos para reportes)

INTEGRACIÓN CON SISTEMA ACTUAL:
- Aprovechar el modelo RegistroMedico existente como base
- Extender el sistema de roles para incluir IPS
- Integrar con el AIController existente
- Usar los componentes UI existentes como base
- Mantener la estructura de autenticación actual

CONSIDERACIONES DE RENDIMIENTO:
- Implementar WebSocket para actualizaciones en tiempo real
- Usar paginación en todas las listas
- Implementar caché para reportes frecuentes
- Optimizar consultas con índices apropiados
- Considerar lazy loading para componentes pesados

PRÓXIMOS PASOS RECOMENDADOS:
1. Crear las migraciones para las nuevas tablas
2. Implementar el Dashboard Ejecutivo de Referencias
3. Desarrollar la Vista de Gestión de Solicitudes
4. Crear el formulario para IPS externas
5. Implementar el sistema de notificaciones
6. Desarrollar los reportes y analíticas