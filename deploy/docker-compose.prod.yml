version: '3.8'

services:
  # Blue Environment
  vital-red-blue:
    build: 
      context: ..
      dockerfile: Dockerfile.prod
    container_name: vital-red-blue
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=vital-red-db
      - REDIS_HOST=vital-red-redis
      - APP_URL=https://vital-red.hospital.com
    volumes:
      - ../storage:/var/www/html/storage
      - ../bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - vital-red-network
    depends_on:
      - vital-red-db
      - vital-red-redis

  # Green Environment
  vital-red-green:
    build: 
      context: ..
      dockerfile: Dockerfile.prod
    container_name: vital-red-green
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - DB_HOST=vital-red-db
      - REDIS_HOST=vital-red-redis
      - APP_URL=https://vital-red.hospital.com
    volumes:
      - ../storage:/var/www/html/storage
      - ../bootstrap/cache:/var/www/html/bootstrap/cache
    networks:
      - vital-red-network
    depends_on:
      - vital-red-db
      - vital-red-redis

  # Load Balancer
  vital-red-lb:
    image: nginx:alpine
    container_name: vital-red-lb
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./ssl:/etc/nginx/ssl
    networks:
      - vital-red-network
    depends_on:
      - vital-red-blue
      - vital-red-green

  # Database
  vital-red-db:
    image: mysql:8.0
    container_name: vital-red-db
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_DATABASE}
      - MYSQL_USER=${DB_USERNAME}
      - MYSQL_PASSWORD=${DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
      - ./mysql.conf:/etc/mysql/conf.d/custom.cnf
    networks:
      - vital-red-network
    ports:
      - "3306:3306"

  # Redis
  vital-red-redis:
    image: redis:7-alpine
    container_name: vital-red-redis
    volumes:
      - redis_data:/data
    networks:
      - vital-red-network
    ports:
      - "6379:6379"

  # Monitoring
  vital-red-monitor:
    image: prom/prometheus
    container_name: vital-red-monitor
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - vital-red-network
    ports:
      - "9090:9090"

volumes:
  db_data:
  redis_data:
  prometheus_data:

networks:
  vital-red-network:
    driver: bridge